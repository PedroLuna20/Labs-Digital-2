

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jan 31 11:52:04 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataBANK0
   294  024A                     __pidataBANK0:
   295                           
   296                           ;initializer for _tabla
   297  024A  343F               	retlw	63
   298  024B  3406               	retlw	6
   299  024C  345B               	retlw	91
   300  024D  344F               	retlw	79
   301  024E  3466               	retlw	102
   302  024F  346D               	retlw	109
   303  0250  347D               	retlw	125
   304  0251  3407               	retlw	7
   305  0252  347F               	retlw	127
   306  0253  346F               	retlw	111
   307  0254  3477               	retlw	119
   308  0255  347C               	retlw	124
   309  0256  3439               	retlw	57
   310  0257  345E               	retlw	94
   311  0258  3479               	retlw	121
   312  0259  3471               	retlw	113
   313  0009                     _PORTE	set	9
   314  001E                     _ADRESH	set	30
   315  0008                     _PORTD	set	8
   316  000C                     _PIR1bits	set	12
   317  0007                     _PORTC	set	7
   318  0006                     _PORTB	set	6
   319  0009                     _PORTEbits	set	9
   320  001F                     _ADCON0bits	set	31
   321  0005                     _PORTA	set	5
   322  0006                     _PORTBbits	set	6
   323  0001                     _TMR0	set	1
   324  000B                     _INTCONbits	set	11
   325  0031                     _RB1	set	49
   326  0030                     _RB0	set	48
   327  009F                     _ADCON1bits	set	159
   328  008F                     _OSCCONbits	set	143
   329  0095                     _WPUB	set	149
   330  0081                     _OPTION_REGbits	set	129
   331  0089                     _TRISE	set	137
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334  0086                     _TRISB	set	134
   335  0085                     _TRISA	set	133
   336  0189                     _ANSELH	set	393
   337  0188                     _ANSEL	set	392
   338                           
   339                           	psect	cinit
   340  0011                     start_initialization:	
   341                           ; #config settings
   342                           
   343  0011                     __initialization:
   344                           
   345                           ; Initialize objects allocated to BANK0
   346  0011  1383               	bcf	3,7	;select IRP bank0
   347  0012  3030               	movlw	low (__pdataBANK0+16)
   348  0013  00FD               	movwf	btemp+-1
   349  0014  3002               	movlw	high __pidataBANK0
   350  0015  00FE               	movwf	btemp
   351  0016  304A               	movlw	low __pidataBANK0
   352  0017  00FF               	movwf	btemp+1
   353  0018  3020               	movlw	low __pdataBANK0
   354  0019  0084               	movwf	4
   355  001A  120A  118A  223B  120A  118A  	fcall	init_ram0
   356                           
   357                           ; Clear objects allocated to BANK0
   358  001F  01BB               	clrf	__pbssBANK0& (0+127)
   359  0020  01BC               	clrf	(__pbssBANK0+1)& (0+127)
   360  0021  01BD               	clrf	(__pbssBANK0+2)& (0+127)
   361  0022  01BE               	clrf	(__pbssBANK0+3)& (0+127)
   362  0023  01BF               	clrf	(__pbssBANK0+4)& (0+127)
   363  0024  01C0               	clrf	(__pbssBANK0+5)& (0+127)
   364  0025  01C1               	clrf	(__pbssBANK0+6)& (0+127)
   365  0026  01C2               	clrf	(__pbssBANK0+7)& (0+127)
   366  0027  01C3               	clrf	(__pbssBANK0+8)& (0+127)
   367  0028  01C4               	clrf	(__pbssBANK0+9)& (0+127)
   368  0029                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0029                     __end_of__initialization:
   372  0029  0183               	clrf	3
   373  002A  120A  118A  28FD   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssBANK0
   376  003B                     __pbssBANK0:
   377  003B                     _var:
   378  003B                     	ds	2
   379  003D                     _nib2:
   380  003D                     	ds	2
   381  003F                     _nib1:
   382  003F                     	ds	2
   383  0041                     _banderas:
   384  0041                     	ds	2
   385  0043                     _var2:
   386  0043                     	ds	2
   387                           
   388                           	psect	dataBANK0
   389  0020                     __pdataBANK0:
   390  0020                     _tabla:
   391  0020                     	ds	16
   392                           
   393                           	psect	inittext
   394  0237                     init_fetch0:	
   395                           ;	Called with low address in FSR and high address in W
   396                           
   397  0237  087E               	movf	btemp,w
   398  0238  008A               	movwf	10
   399  0239  087F               	movf	btemp+1,w
   400  023A  0082               	movwf	2
   401  023B                     init_ram0:	
   402                           ;Called with:
   403                           ;	high address of idata address in btemp 
   404                           ;	low address of idata address in btemp+1 
   405                           ;	low address of data in FSR
   406                           ;	high address + 1 of data in btemp-1
   407                           
   408  023B  120A  118A  2237  120A  118A  	fcall	init_fetch0
   409  0240  0080               	movwf	0
   410  0241  0A84               	incf	4,f
   411  0242  0804               	movf	4,w
   412  0243  067D               	xorwf	btemp+-1,w
   413  0244  1903               	btfsc	3,2
   414  0245  3400               	retlw	0
   415  0246  0AFF               	incf	btemp+1,f
   416  0247  1903               	btfsc	3,2
   417  0248  0AFE               	incf	btemp,f
   418  0249  2A3B               	goto	init_ram0
   419                           
   420                           	psect	cstackCOMMON
   421  0070                     __pcstackCOMMON:
   422  0070                     ?_adc_function:
   423  0070                     ?_adc_setup:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_setup:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_isr:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_main:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_valores:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?i1_valores:	
   439                           ; 2 bytes @ 0x0
   440                           
   441  0070                     ?i1___awdiv:	
   442                           ; 2 bytes @ 0x0
   443                           
   444  0070                     i1___awdiv@divisor:	
   445                           ; 2 bytes @ 0x0
   446                           
   447                           
   448                           ; 2 bytes @ 0x0
   449  0070                     	ds	2
   450  0072                     i1___awdiv@dividend:
   451                           
   452                           ; 2 bytes @ 0x2
   453  0072                     	ds	2
   454  0074                     ??i1___awdiv:
   455                           
   456                           ; 1 bytes @ 0x4
   457  0074                     	ds	1
   458  0075                     i1___awdiv@counter:
   459                           
   460                           ; 1 bytes @ 0x5
   461  0075                     	ds	1
   462  0076                     i1___awdiv@sign:
   463                           
   464                           ; 1 bytes @ 0x6
   465  0076                     	ds	1
   466  0077                     i1___awdiv@quotient:
   467                           
   468                           ; 2 bytes @ 0x7
   469  0077                     	ds	2
   470  0079                     ??_adc_function:
   471  0079                     ??i1_valores:	
   472                           ; 1 bytes @ 0x9
   473                           
   474                           
   475                           ; 1 bytes @ 0x9
   476  0079                     	ds	2
   477  007B                     ??_isr:
   478                           
   479                           ; 1 bytes @ 0xB
   480  007B                     	ds	3
   481                           
   482                           	psect	cstackBANK0
   483  0030                     __pcstackBANK0:
   484  0030                     ??_adc_setup:
   485  0030                     ??_setup:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0030                     ?___awdiv:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0030                     ___awdiv@divisor:	
   492                           ; 2 bytes @ 0x0
   493                           
   494                           
   495                           ; 2 bytes @ 0x0
   496  0030                     	ds	2
   497  0032                     ___awdiv@dividend:
   498                           
   499                           ; 2 bytes @ 0x2
   500  0032                     	ds	2
   501  0034                     ??___awdiv:
   502                           
   503                           ; 1 bytes @ 0x4
   504  0034                     	ds	1
   505  0035                     ___awdiv@counter:
   506                           
   507                           ; 1 bytes @ 0x5
   508  0035                     	ds	1
   509  0036                     ___awdiv@sign:
   510                           
   511                           ; 1 bytes @ 0x6
   512  0036                     	ds	1
   513  0037                     ___awdiv@quotient:
   514                           
   515                           ; 2 bytes @ 0x7
   516  0037                     	ds	2
   517  0039                     ??_valores:
   518  0039                     ??_main:	
   519                           ; 1 bytes @ 0x9
   520                           
   521                           
   522                           ; 1 bytes @ 0x9
   523  0039                     	ds	2
   524                           
   525                           	psect	maintext
   526  00FD                     __pmaintext:	
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 67 in file "lab01.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : B00/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       2       0       0       0
   549 ;;      Totals:         0       2       0       0       0
   550 ;;Total ram usage:        2 bytes
   551 ;; Hardware stack levels required when called: 6
   552 ;; This function calls:
   553 ;;		_adc_setup
   554 ;;		_setup
   555 ;;		_valores
   556 ;; This function is called by:
   557 ;;		Startup code after reset
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           
   562                           ;psect for function _main
   563  00FD                     _main:
   564  00FD                     l1144:	
   565                           ;incstack = 0
   566                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   567                           
   568                           
   569                           ;lab01.c: 69:     adc_setup();
   570  00FD  120A  118A  2208  120A  118A  	fcall	_adc_setup
   571                           
   572                           ;lab01.c: 70:     setup();
   573  0102  120A  118A  21A4  120A  118A  	fcall	_setup
   574  0107                     l1146:
   575                           
   576                           ;lab01.c: 73:     {;lab01.c: 74:         if (!PORTBbits.RB0)
   577  0107  1283               	bcf	3,5	;RP0=0, select bank0
   578  0108  1303               	bcf	3,6	;RP1=0, select bank0
   579  0109  1806               	btfsc	6,0	;volatile
   580  010A  290C               	goto	u571
   581  010B  290D               	goto	u570
   582  010C                     u571:
   583  010C  291C               	goto	l1154
   584  010D                     u570:
   585  010D                     l81:
   586  010D  1C06               	btfss	6,0	;volatile
   587  010E  2910               	goto	u581
   588  010F  2911               	goto	u580
   589  0110                     u581:
   590  0110  290D               	goto	l81
   591  0111                     u580:
   592  0111                     l1150:
   593                           
   594                           ;lab01.c: 77:             PORTA++;
   595  0111  3001               	movlw	1
   596  0112  00B9               	movwf	??_main
   597  0113  0839               	movf	??_main,w
   598  0114  0785               	addwf	5,f	;volatile
   599  0115                     l1152:
   600                           
   601                           ;lab01.c: 78:             var = PORTA;
   602  0115  0805               	movf	5,w	;volatile
   603  0116  00B9               	movwf	??_main
   604  0117  01BA               	clrf	??_main+1
   605  0118  0839               	movf	??_main,w
   606  0119  00BB               	movwf	_var
   607  011A  083A               	movf	??_main+1,w
   608  011B  00BC               	movwf	_var+1
   609  011C                     l1154:
   610                           
   611                           ;lab01.c: 80:         if (!PORTBbits.RB1)
   612  011C  1886               	btfsc	6,1	;volatile
   613  011D  291F               	goto	u591
   614  011E  2920               	goto	u590
   615  011F                     u591:
   616  011F  292D               	goto	l1162
   617  0120                     u590:
   618  0120                     l85:
   619  0120  1C86               	btfss	6,1	;volatile
   620  0121  2923               	goto	u601
   621  0122  2924               	goto	u600
   622  0123                     u601:
   623  0123  2920               	goto	l85
   624  0124                     u600:
   625  0124                     l1158:
   626                           
   627                           ;lab01.c: 83:             PORTA--;
   628  0124  3001               	movlw	1
   629  0125  0285               	subwf	5,f	;volatile
   630  0126                     l1160:
   631                           
   632                           ;lab01.c: 84:             var = PORTA;
   633  0126  0805               	movf	5,w	;volatile
   634  0127  00B9               	movwf	??_main
   635  0128  01BA               	clrf	??_main+1
   636  0129  0839               	movf	??_main,w
   637  012A  00BB               	movwf	_var
   638  012B  083A               	movf	??_main+1,w
   639  012C  00BC               	movwf	_var+1
   640  012D                     l1162:
   641                           
   642                           ;lab01.c: 86:         valores();
   643  012D  120A  118A  21D0  120A  118A  	fcall	_valores
   644  0132                     l1164:
   645                           
   646                           ;lab01.c: 88:         if (ADCON0bits.GO == 0)
   647  0132  1283               	bcf	3,5	;RP0=0, select bank0
   648  0133  1303               	bcf	3,6	;RP1=0, select bank0
   649  0134  189F               	btfsc	31,1	;volatile
   650  0135  2937               	goto	u611
   651  0136  2938               	goto	u610
   652  0137                     u611:
   653  0137  2946               	goto	l1172
   654  0138                     u610:
   655  0138                     l1166:
   656                           
   657                           ;lab01.c: 89:         {;lab01.c: 90:             ADCON0bits.CHS = 8;
   658  0138  081F               	movf	31,w	;volatile
   659  0139  39C3               	andlw	-61
   660  013A  3820               	iorlw	32
   661  013B  009F               	movwf	31	;volatile
   662  013C                     l1168:
   663                           
   664                           ;lab01.c: 91:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   665  013C  300F               	movlw	15
   666  013D  1283               	bcf	3,5	;RP0=0, select bank0
   667  013E  1303               	bcf	3,6	;RP1=0, select bank0
   668  013F  00B9               	movwf	??_main
   669  0140                     u637:
   670  0140  0BB9               	decfsz	??_main,f
   671  0141  2940               	goto	u637
   672  0142  2943               	nop2
   673  0143                     l1170:
   674                           
   675                           ;lab01.c: 92:             ADCON0bits.GO = 1;
   676  0143  1283               	bcf	3,5	;RP0=0, select bank0
   677  0144  1303               	bcf	3,6	;RP1=0, select bank0
   678  0145  149F               	bsf	31,1	;volatile
   679  0146                     l1172:
   680                           
   681                           ;lab01.c: 95:         if (var2 > var)
   682  0146  083C               	movf	_var+1,w
   683  0147  3A80               	xorlw	128
   684  0148  00B9               	movwf	??_main
   685  0149  0844               	movf	_var2+1,w
   686  014A  3A80               	xorlw	128
   687  014B  0239               	subwf	??_main,w
   688  014C  1D03               	skipz
   689  014D  2950               	goto	u625
   690  014E  0843               	movf	_var2,w
   691  014F  023B               	subwf	_var,w
   692  0150                     u625:
   693  0150  1803               	skipnc
   694  0151  2953               	goto	u621
   695  0152  2954               	goto	u620
   696  0153                     u621:
   697  0153  2958               	goto	l89
   698  0154                     u620:
   699  0154                     l1174:
   700                           
   701                           ;lab01.c: 96:         {;lab01.c: 97:             PORTEbits.RE2 = 1;
   702  0154  1283               	bcf	3,5	;RP0=0, select bank0
   703  0155  1303               	bcf	3,6	;RP1=0, select bank0
   704  0156  1509               	bsf	9,2	;volatile
   705                           
   706                           ;lab01.c: 98:         }
   707  0157  2907               	goto	l1146
   708  0158                     l89:	
   709                           ;lab01.c: 99:         else
   710                           
   711                           
   712                           ;lab01.c: 100:         {;lab01.c: 101:             PORTEbits.RE2 = 0;
   713  0158  1283               	bcf	3,5	;RP0=0, select bank0
   714  0159  1303               	bcf	3,6	;RP1=0, select bank0
   715  015A  1109               	bcf	9,2	;volatile
   716  015B  2907               	goto	l1146
   717  015C  120A  118A  280E   	ljmp	start
   718  015F                     __end_of_main:
   719                           
   720                           	psect	text1
   721  01D0                     __ptext1:	
   722 ;; *************** function _valores *****************
   723 ;; Defined at:
   724 ;;		line 46 in file "adc_lib.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;		None
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;                  2   20[None  ] int 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, pclath, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   738 ;;      Params:         0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0
   741 ;;      Totals:         0       0       0       0       0
   742 ;;Total ram usage:        0 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 5
   745 ;; This function calls:
   746 ;;		___awdiv
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _valores
   754  01D0                     _valores:
   755  01D0                     l1132:	
   756                           ;incstack = 0
   757                           ; Regs used in _valores: [wreg+status,2+status,0+pclath+cstack]
   758                           
   759                           
   760                           ;adc_lib.c: 48:     nib1 = var2%0x10;
   761  01D0  300F               	movlw	15
   762  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   763  01D2  1303               	bcf	3,6	;RP1=0, select bank0
   764  01D3  0543               	andwf	_var2,w
   765  01D4  00BF               	movwf	_nib1
   766  01D5  3000               	movlw	0
   767  01D6  0544               	andwf	_var2+1,w
   768  01D7  00C0               	movwf	_nib1+1
   769  01D8                     l1134:
   770                           
   771                           ;adc_lib.c: 49:     nib2 = var2/0x10;
   772  01D8  3010               	movlw	16
   773  01D9  00B0               	movwf	___awdiv@divisor
   774  01DA  3000               	movlw	0
   775  01DB  00B1               	movwf	___awdiv@divisor+1
   776  01DC  0844               	movf	_var2+1,w
   777  01DD  00B3               	movwf	___awdiv@dividend+1
   778  01DE  0843               	movf	_var2,w
   779  01DF  00B2               	movwf	___awdiv@dividend
   780  01E0  120A  118A  202D  120A  118A  	fcall	___awdiv
   781  01E5  1283               	bcf	3,5	;RP0=0, select bank0
   782  01E6  1303               	bcf	3,6	;RP1=0, select bank0
   783  01E7  0831               	movf	?___awdiv+1,w
   784  01E8  00BE               	movwf	_nib2+1
   785  01E9  0830               	movf	?___awdiv,w
   786  01EA  00BD               	movwf	_nib2
   787  01EB                     l140:
   788  01EB  0008               	return
   789  01EC                     __end_of_valores:
   790                           
   791                           	psect	text2
   792  002D                     __ptext2:	
   793 ;; *************** function ___awdiv *****************
   794 ;; Defined at:
   795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  divisor         2    0[BANK0 ] int 
   798 ;;  dividend        2    2[BANK0 ] int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  quotient        2    7[BANK0 ] int 
   801 ;;  sign            1    6[BANK0 ] unsigned char 
   802 ;;  counter         1    5[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2    0[BANK0 ] int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   812 ;;      Params:         0       4       0       0       0
   813 ;;      Locals:         0       4       0       0       0
   814 ;;      Temps:          0       1       0       0       0
   815 ;;      Totals:         0       9       0       0       0
   816 ;;Total ram usage:        9 bytes
   817 ;; Hardware stack levels used: 1
   818 ;; Hardware stack levels required when called: 4
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_valores
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function ___awdiv
   828  002D                     ___awdiv:
   829  002D                     l998:	
   830                           ;incstack = 0
   831                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   832                           
   833  002D  1283               	bcf	3,5	;RP0=0, select bank0
   834  002E  1303               	bcf	3,6	;RP1=0, select bank0
   835  002F  01B6               	clrf	___awdiv@sign
   836  0030                     l1000:
   837  0030  1FB1               	btfss	___awdiv@divisor+1,7
   838  0031  2833               	goto	u421
   839  0032  2834               	goto	u420
   840  0033                     u421:
   841  0033  283B               	goto	l1006
   842  0034                     u420:
   843  0034                     l1002:
   844  0034  09B0               	comf	___awdiv@divisor,f
   845  0035  09B1               	comf	___awdiv@divisor+1,f
   846  0036  0AB0               	incf	___awdiv@divisor,f
   847  0037  1903               	skipnz
   848  0038  0AB1               	incf	___awdiv@divisor+1,f
   849  0039                     l1004:
   850  0039  01B6               	clrf	___awdiv@sign
   851  003A  0AB6               	incf	___awdiv@sign,f
   852  003B                     l1006:
   853  003B  1FB3               	btfss	___awdiv@dividend+1,7
   854  003C  283E               	goto	u431
   855  003D  283F               	goto	u430
   856  003E                     u431:
   857  003E  2848               	goto	l1012
   858  003F                     u430:
   859  003F                     l1008:
   860  003F  09B2               	comf	___awdiv@dividend,f
   861  0040  09B3               	comf	___awdiv@dividend+1,f
   862  0041  0AB2               	incf	___awdiv@dividend,f
   863  0042  1903               	skipnz
   864  0043  0AB3               	incf	___awdiv@dividend+1,f
   865  0044                     l1010:
   866  0044  3001               	movlw	1
   867  0045  00B4               	movwf	??___awdiv
   868  0046  0834               	movf	??___awdiv,w
   869  0047  06B6               	xorwf	___awdiv@sign,f
   870  0048                     l1012:
   871  0048  01B7               	clrf	___awdiv@quotient
   872  0049  01B8               	clrf	___awdiv@quotient+1
   873  004A                     l1014:
   874  004A  0830               	movf	___awdiv@divisor,w
   875  004B  0431               	iorwf	___awdiv@divisor+1,w
   876  004C  1903               	btfsc	3,2
   877  004D  284F               	goto	u441
   878  004E  2850               	goto	u440
   879  004F                     u441:
   880  004F  2887               	goto	l1034
   881  0050                     u440:
   882  0050                     l1016:
   883  0050  01B5               	clrf	___awdiv@counter
   884  0051  0AB5               	incf	___awdiv@counter,f
   885  0052  285E               	goto	l1022
   886  0053                     l1018:
   887  0053  3001               	movlw	1
   888  0054                     u455:
   889  0054  1003               	clrc
   890  0055  0DB0               	rlf	___awdiv@divisor,f
   891  0056  0DB1               	rlf	___awdiv@divisor+1,f
   892  0057  3EFF               	addlw	-1
   893  0058  1D03               	skipz
   894  0059  2854               	goto	u455
   895  005A                     l1020:
   896  005A  3001               	movlw	1
   897  005B  00B4               	movwf	??___awdiv
   898  005C  0834               	movf	??___awdiv,w
   899  005D  07B5               	addwf	___awdiv@counter,f
   900  005E                     l1022:
   901  005E  1FB1               	btfss	___awdiv@divisor+1,7
   902  005F  2861               	goto	u461
   903  0060  2862               	goto	u460
   904  0061                     u461:
   905  0061  2853               	goto	l1018
   906  0062                     u460:
   907  0062                     l1024:
   908  0062  3001               	movlw	1
   909  0063                     u475:
   910  0063  1003               	clrc
   911  0064  0DB7               	rlf	___awdiv@quotient,f
   912  0065  0DB8               	rlf	___awdiv@quotient+1,f
   913  0066  3EFF               	addlw	-1
   914  0067  1D03               	skipz
   915  0068  2863               	goto	u475
   916  0069  0831               	movf	___awdiv@divisor+1,w
   917  006A  0233               	subwf	___awdiv@dividend+1,w
   918  006B  1D03               	skipz
   919  006C  286F               	goto	u485
   920  006D  0830               	movf	___awdiv@divisor,w
   921  006E  0232               	subwf	___awdiv@dividend,w
   922  006F                     u485:
   923  006F  1C03               	skipc
   924  0070  2872               	goto	u481
   925  0071  2873               	goto	u480
   926  0072                     u481:
   927  0072  287A               	goto	l1030
   928  0073                     u480:
   929  0073                     l1026:
   930  0073  0830               	movf	___awdiv@divisor,w
   931  0074  02B2               	subwf	___awdiv@dividend,f
   932  0075  0831               	movf	___awdiv@divisor+1,w
   933  0076  1C03               	skipc
   934  0077  03B3               	decf	___awdiv@dividend+1,f
   935  0078  02B3               	subwf	___awdiv@dividend+1,f
   936  0079                     l1028:
   937  0079  1437               	bsf	___awdiv@quotient,0
   938  007A                     l1030:
   939  007A  3001               	movlw	1
   940  007B                     u495:
   941  007B  1003               	clrc
   942  007C  0CB1               	rrf	___awdiv@divisor+1,f
   943  007D  0CB0               	rrf	___awdiv@divisor,f
   944  007E  3EFF               	addlw	-1
   945  007F  1D03               	skipz
   946  0080  287B               	goto	u495
   947  0081                     l1032:
   948  0081  3001               	movlw	1
   949  0082  02B5               	subwf	___awdiv@counter,f
   950  0083  1D03               	btfss	3,2
   951  0084  2886               	goto	u501
   952  0085  2887               	goto	u500
   953  0086                     u501:
   954  0086  2862               	goto	l1024
   955  0087                     u500:
   956  0087                     l1034:
   957  0087  0836               	movf	___awdiv@sign,w
   958  0088  1903               	btfsc	3,2
   959  0089  288B               	goto	u511
   960  008A  288C               	goto	u510
   961  008B                     u511:
   962  008B  2891               	goto	l1038
   963  008C                     u510:
   964  008C                     l1036:
   965  008C  09B7               	comf	___awdiv@quotient,f
   966  008D  09B8               	comf	___awdiv@quotient+1,f
   967  008E  0AB7               	incf	___awdiv@quotient,f
   968  008F  1903               	skipnz
   969  0090  0AB8               	incf	___awdiv@quotient+1,f
   970  0091                     l1038:
   971  0091  0838               	movf	___awdiv@quotient+1,w
   972  0092  00B1               	movwf	?___awdiv+1
   973  0093  0837               	movf	___awdiv@quotient,w
   974  0094  00B0               	movwf	?___awdiv
   975  0095                     l379:
   976  0095  0008               	return
   977  0096                     __end_of___awdiv:
   978                           
   979                           	psect	text3
   980  01A4                     __ptext3:	
   981 ;; *************** function _setup *****************
   982 ;; Defined at:
   983 ;;		line 107 in file "lab01.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 4
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		_main
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _setup
  1013  01A4                     _setup:
  1014  01A4                     l1082:	
  1015                           ;incstack = 0
  1016                           ; Regs used in _setup: [wreg+status,2+status,0]
  1017                           
  1018                           
  1019                           ;lab01.c: 110:     ANSEL = 0b0100000000;
  1020  01A4  1683               	bsf	3,5	;RP0=1, select bank3
  1021  01A5  1703               	bsf	3,6	;RP1=1, select bank3
  1022  01A6  0188               	clrf	8	;volatile
  1023                           
  1024                           ;lab01.c: 111:     ANSELH = 0;
  1025  01A7  0189               	clrf	9	;volatile
  1026                           
  1027                           ;lab01.c: 113:     TRISA = 0;
  1028  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1029  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1030  01AA  0185               	clrf	5	;volatile
  1031  01AB                     l1084:
  1032                           
  1033                           ;lab01.c: 114:     TRISB = 0b0111;
  1034  01AB  3007               	movlw	7
  1035  01AC  0086               	movwf	6	;volatile
  1036  01AD                     l1086:
  1037                           
  1038                           ;lab01.c: 115:     TRISC = 0;
  1039  01AD  0187               	clrf	7	;volatile
  1040  01AE                     l1088:
  1041                           
  1042                           ;lab01.c: 116:     TRISD = 0;
  1043  01AE  0188               	clrf	8	;volatile
  1044  01AF                     l1090:
  1045                           
  1046                           ;lab01.c: 117:     TRISE = 0;
  1047  01AF  0189               	clrf	9	;volatile
  1048  01B0                     l1092:
  1049                           
  1050                           ;lab01.c: 119:     OPTION_REGbits.nRBPU = 0;
  1051  01B0  1381               	bcf	1,7	;volatile
  1052                           
  1053                           ;lab01.c: 120:     WPUB = 0b0011;
  1054  01B1  3003               	movlw	3
  1055  01B2  0095               	movwf	21	;volatile
  1056  01B3                     l1094:
  1057                           
  1058                           ;lab01.c: 122:     PORTA = 0;
  1059  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1060  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1061  01B5  0185               	clrf	5	;volatile
  1062  01B6                     l1096:
  1063                           
  1064                           ;lab01.c: 123:     PORTB = 0;
  1065  01B6  0186               	clrf	6	;volatile
  1066  01B7                     l1098:
  1067                           
  1068                           ;lab01.c: 124:     PORTC = 0;
  1069  01B7  0187               	clrf	7	;volatile
  1070  01B8                     l1100:
  1071                           
  1072                           ;lab01.c: 127:     OSCCONbits.IRCF = 0b0110;
  1073  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1074  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1075  01BA  080F               	movf	15,w	;volatile
  1076  01BB  398F               	andlw	-113
  1077  01BC  3860               	iorlw	96
  1078  01BD  008F               	movwf	15	;volatile
  1079  01BE                     l1102:
  1080                           
  1081                           ;lab01.c: 128:     OSCCONbits.SCS = 1;
  1082  01BE  140F               	bsf	15,0	;volatile
  1083  01BF                     l1104:
  1084                           
  1085                           ;lab01.c: 131:     INTCONbits.RBIE = 1;
  1086  01BF  158B               	bsf	11,3	;volatile
  1087  01C0                     l1106:
  1088                           
  1089                           ;lab01.c: 134:     OPTION_REGbits.T0CS = 0;
  1090  01C0  1281               	bcf	1,5	;volatile
  1091  01C1                     l1108:
  1092                           
  1093                           ;lab01.c: 135:     OPTION_REGbits.T0SE = 0;
  1094  01C1  1201               	bcf	1,4	;volatile
  1095  01C2                     l1110:
  1096                           
  1097                           ;lab01.c: 136:     OPTION_REGbits.PSA = 0;
  1098  01C2  1181               	bcf	1,3	;volatile
  1099  01C3                     l1112:
  1100                           
  1101                           ;lab01.c: 137:     OPTION_REGbits.PS2 = 1;
  1102  01C3  1501               	bsf	1,2	;volatile
  1103  01C4                     l1114:
  1104                           
  1105                           ;lab01.c: 138:     OPTION_REGbits.PS1 = 1;
  1106  01C4  1481               	bsf	1,1	;volatile
  1107  01C5                     l1116:
  1108                           
  1109                           ;lab01.c: 139:     OPTION_REGbits.PS0 = 1;
  1110  01C5  1401               	bsf	1,0	;volatile
  1111  01C6                     l1118:
  1112                           
  1113                           ;lab01.c: 140:     TMR0 = 237;;
  1114  01C6  30ED               	movlw	237
  1115  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1116  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1117  01C9  0081               	movwf	1	;volatile
  1118  01CA                     l1120:
  1119                           
  1120                           ;lab01.c: 145:     INTCONbits.T0IF = 0;
  1121  01CA  110B               	bcf	11,2	;volatile
  1122  01CB                     l1122:
  1123                           
  1124                           ;lab01.c: 146:     INTCONbits.T0IE = 1;
  1125  01CB  168B               	bsf	11,5	;volatile
  1126  01CC                     l1124:
  1127                           
  1128                           ;lab01.c: 147:     INTCONbits.RBIF = 0;
  1129  01CC  100B               	bcf	11,0	;volatile
  1130  01CD                     l1126:
  1131                           
  1132                           ;lab01.c: 148:     INTCONbits.RBIE = 1;
  1133  01CD  158B               	bsf	11,3	;volatile
  1134  01CE                     l1128:
  1135                           
  1136                           ;lab01.c: 149:     INTCONbits.GIE = 1;
  1137  01CE  178B               	bsf	11,7	;volatile
  1138  01CF                     l96:
  1139  01CF  0008               	return
  1140  01D0                     __end_of_setup:
  1141                           
  1142                           	psect	text4
  1143  0208                     __ptext4:	
  1144 ;; *************** function _adc_setup *****************
  1145 ;; Defined at:
  1146 ;;		line 3 in file "adc_lib.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          0       1       0       0       0
  1163 ;;      Totals:         0       1       0       0       0
  1164 ;;Total ram usage:        1 bytes
  1165 ;; Hardware stack levels used: 1
  1166 ;; Hardware stack levels required when called: 4
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _adc_setup
  1176  0208                     _adc_setup:
  1177  0208                     l1074:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _adc_setup: [wreg+status,2+status,0]
  1180                           
  1181                           
  1182                           ;adc_lib.c: 6:     ADCON1bits.ADFM = 0;
  1183  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0209  1303               	bcf	3,6	;RP1=0, select bank1
  1185  020A  139F               	bcf	31,7	;volatile
  1186                           
  1187                           ;adc_lib.c: 7:     ADCON1bits.VCFG0 = 0;
  1188  020B  121F               	bcf	31,4	;volatile
  1189                           
  1190                           ;adc_lib.c: 8:     ADCON1bits.VCFG1 = 0;
  1191  020C  129F               	bcf	31,5	;volatile
  1192  020D                     l1076:
  1193                           
  1194                           ;adc_lib.c: 10:     ADCON0bits.ADCS = 0b001;
  1195  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1196  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1197  020F  081F               	movf	31,w	;volatile
  1198  0210  393F               	andlw	-193
  1199  0211  3840               	iorlw	64
  1200  0212  009F               	movwf	31	;volatile
  1201                           
  1202                           ;adc_lib.c: 11:     ADCON0bits.CHS = 0b1000;
  1203  0213  081F               	movf	31,w	;volatile
  1204  0214  39C3               	andlw	-61
  1205  0215  3820               	iorlw	32
  1206  0216  009F               	movwf	31	;volatile
  1207  0217                     l1078:
  1208                           
  1209                           ;adc_lib.c: 12:     ADCON0bits.ADON = 1;
  1210  0217  141F               	bsf	31,0	;volatile
  1211  0218                     l1080:
  1212                           
  1213                           ;adc_lib.c: 13:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1214  0218  300F               	movlw	15
  1215  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1216  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1217  021B  00B0               	movwf	??_adc_setup
  1218  021C                     u647:
  1219  021C  0BB0               	decfsz	??_adc_setup,f
  1220  021D  2A1C               	goto	u647
  1221  021E  2A1F               	nop2
  1222  021F                     l129:
  1223  021F  0008               	return
  1224  0220                     __end_of_adc_setup:
  1225                           
  1226                           	psect	text5
  1227  0220                     __ptext5:	
  1228 ;; *************** function _isr *****************
  1229 ;; Defined at:
  1230 ;;		line 55 in file "lab01.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          3       0       0       0       0
  1247 ;;      Totals:         3       0       0       0       0
  1248 ;;Total ram usage:        3 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 3
  1251 ;; This function calls:
  1252 ;;		_adc_function
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _isr
  1260  0220                     _isr:
  1261  0220                     i1l1136:
  1262                           
  1263                           ;lab01.c: 57:     if (INTCONbits.T0IF == 1)
  1264  0220  1D0B               	btfss	11,2	;volatile
  1265  0221  2A23               	goto	u56_21
  1266  0222  2A24               	goto	u56_20
  1267  0223                     u56_21:
  1268  0223  2A2E               	goto	i1l74
  1269  0224                     u56_20:
  1270  0224                     i1l1138:
  1271                           
  1272                           ;lab01.c: 58:     {;lab01.c: 59:         adc_function();
  1273  0224  120A  118A  215F  120A  118A  	fcall	_adc_function
  1274  0229                     i1l1140:
  1275                           
  1276                           ;lab01.c: 60:     TMR0 = 237;;
  1277  0229  30ED               	movlw	237
  1278  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1279  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1280  022C  0081               	movwf	1	;volatile
  1281  022D                     i1l1142:
  1282                           
  1283                           ;lab01.c: 61:     INTCONbits.T0IF = 0;
  1284  022D  110B               	bcf	11,2	;volatile
  1285  022E                     i1l74:
  1286  022E  087D               	movf	??_isr+2,w
  1287  022F  008A               	movwf	10
  1288  0230  087C               	movf	??_isr+1,w
  1289  0231  0084               	movwf	4
  1290  0232  0E7B               	swapf	??_isr,w
  1291  0233  0083               	movwf	3
  1292  0234  0EFE               	swapf	btemp,f
  1293  0235  0E7E               	swapf	btemp,w
  1294  0236  0009               	retfie
  1295  0237                     __end_of_isr:
  1296                           
  1297                           	psect	intentry
  1298  0004                     __pintentry:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1301                           
  1302  0004                     interrupt_function:
  1303  007E                     saved_w	set	btemp
  1304  0004  00FE               	movwf	btemp
  1305  0005  0E03               	swapf	3,w
  1306  0006  00FB               	movwf	??_isr
  1307  0007  0804               	movf	4,w
  1308  0008  00FC               	movwf	??_isr+1
  1309  0009  080A               	movf	10,w
  1310  000A  00FD               	movwf	??_isr+2
  1311  000B  120A  118A  2A20   	ljmp	_isr
  1312                           
  1313                           	psect	text6
  1314  015F                     __ptext6:	
  1315 ;; *************** function _adc_function *****************
  1316 ;; Defined at:
  1317 ;;		line 17 in file "adc_lib.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       0       0       0       0
  1332 ;;      Locals:         0       0       0       0       0
  1333 ;;      Temps:          2       0       0       0       0
  1334 ;;      Totals:         2       0       0       0       0
  1335 ;;Total ram usage:        2 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 2
  1338 ;; This function calls:
  1339 ;;		i1_valores
  1340 ;; This function is called by:
  1341 ;;		_isr
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           
  1346                           ;psect for function _adc_function
  1347  015F                     _adc_function:
  1348  015F                     i1l1046:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _adc_function: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1351                           
  1352                           
  1353                           ;adc_lib.c: 19:     if (PIR1bits.ADIF)
  1354  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0161  1F0C               	btfss	12,6	;volatile
  1357  0162  2964               	goto	u52_21
  1358  0163  2965               	goto	u52_20
  1359  0164                     u52_21:
  1360  0164  2978               	goto	i1l1054
  1361  0165                     u52_20:
  1362  0165                     i1l1048:
  1363                           
  1364                           ;adc_lib.c: 20:     {;adc_lib.c: 21:         if (ADCON0bits.CHS == 8){
  1365  0165  0C1F               	rrf	31,w	;volatile
  1366  0166  00F9               	movwf	??_adc_function
  1367  0167  0C79               	rrf	??_adc_function,w
  1368  0168  390F               	andlw	15
  1369  0169  3A08               	xorlw	8
  1370  016A  1D03               	skipz
  1371  016B  296D               	goto	u53_21
  1372  016C  296E               	goto	u53_20
  1373  016D                     u53_21:
  1374  016D  2977               	goto	i1l1052
  1375  016E                     u53_20:
  1376  016E                     i1l1050:
  1377                           
  1378                           ;adc_lib.c: 22:             PORTD = ADRESH;
  1379  016E  081E               	movf	30,w	;volatile
  1380  016F  0088               	movwf	8	;volatile
  1381                           
  1382                           ;adc_lib.c: 23:             var2 = PORTD;
  1383  0170  0808               	movf	8,w	;volatile
  1384  0171  00F9               	movwf	??_adc_function
  1385  0172  01FA               	clrf	??_adc_function+1
  1386  0173  0879               	movf	??_adc_function,w
  1387  0174  00C3               	movwf	_var2
  1388  0175  087A               	movf	??_adc_function+1,w
  1389  0176  00C4               	movwf	_var2+1
  1390  0177                     i1l1052:
  1391                           
  1392                           ;adc_lib.c: 25:         PIR1bits.ADIF = 0;
  1393  0177  130C               	bcf	12,6	;volatile
  1394  0178                     i1l1054:
  1395                           
  1396                           ;adc_lib.c: 27:     valores();
  1397  0178  120A  118A  21EC  120A  118A  	fcall	i1_valores
  1398  017D                     i1l1056:
  1399                           
  1400                           ;adc_lib.c: 29:     PORTE = 0;
  1401  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1402  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1403  017F  0189               	clrf	9	;volatile
  1404  0180                     i1l1058:
  1405                           
  1406                           ;adc_lib.c: 30:     if (banderas == 0)
  1407  0180  0841               	movf	_banderas,w
  1408  0181  0442               	iorwf	_banderas+1,w
  1409  0182  1D03               	btfss	3,2
  1410  0183  2985               	goto	u54_21
  1411  0184  2986               	goto	u54_20
  1412  0185                     u54_21:
  1413  0185  2993               	goto	i1l1066
  1414  0186                     u54_20:
  1415  0186                     i1l1060:
  1416                           
  1417                           ;adc_lib.c: 31:     {;adc_lib.c: 32:         PORTEbits.RE1 = 0;
  1418  0186  1089               	bcf	9,1	;volatile
  1419                           
  1420                           ;adc_lib.c: 33:         PORTEbits.RE0 = 1;
  1421  0187  1409               	bsf	9,0	;volatile
  1422  0188                     i1l1062:
  1423                           
  1424                           ;adc_lib.c: 34:         PORTC = (tabla[nib2]);
  1425  0188  083D               	movf	_nib2,w
  1426  0189  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1427  018A  0084               	movwf	4
  1428  018B  1383               	bcf	3,7	;select IRP bank0
  1429  018C  0800               	movf	0,w
  1430  018D  0087               	movwf	7	;volatile
  1431  018E                     i1l1064:
  1432                           
  1433                           ;adc_lib.c: 35:         banderas = 1;
  1434  018E  3001               	movlw	1
  1435  018F  00C1               	movwf	_banderas
  1436  0190  3000               	movlw	0
  1437  0191  00C2               	movwf	_banderas+1
  1438                           
  1439                           ;adc_lib.c: 36:     }
  1440  0192  29A3               	goto	i1l137
  1441  0193                     i1l1066:
  1442  0193  0341               	decf	_banderas,w
  1443  0194  0442               	iorwf	_banderas+1,w
  1444  0195  1D03               	btfss	3,2
  1445  0196  2998               	goto	u55_21
  1446  0197  2999               	goto	u55_20
  1447  0198                     u55_21:
  1448  0198  29A3               	goto	i1l137
  1449  0199                     u55_20:
  1450  0199                     i1l1068:
  1451                           
  1452                           ;adc_lib.c: 38:     {;adc_lib.c: 39:         PORTEbits.RE0 = 0;
  1453  0199  1009               	bcf	9,0	;volatile
  1454                           
  1455                           ;adc_lib.c: 40:         PORTEbits.RE1 = 1;
  1456  019A  1489               	bsf	9,1	;volatile
  1457  019B                     i1l1070:
  1458                           
  1459                           ;adc_lib.c: 41:         PORTC = (tabla[nib1]);
  1460  019B  083F               	movf	_nib1,w
  1461  019C  3E20               	addlw	(low (_tabla| 0))& (0+255)
  1462  019D  0084               	movwf	4
  1463  019E  1383               	bcf	3,7	;select IRP bank0
  1464  019F  0800               	movf	0,w
  1465  01A0  0087               	movwf	7	;volatile
  1466  01A1                     i1l1072:
  1467                           
  1468                           ;adc_lib.c: 42:         banderas = 0;
  1469  01A1  01C1               	clrf	_banderas
  1470  01A2  01C2               	clrf	_banderas+1
  1471  01A3                     i1l137:
  1472  01A3  0008               	return
  1473  01A4                     __end_of_adc_function:
  1474                           
  1475                           	psect	text7
  1476  01EC                     __ptext7:	
  1477 ;; *************** function i1_valores *****************
  1478 ;; Defined at:
  1479 ;;		line 46 in file "adc_lib.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  2    0[None  ] int 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0
  1496 ;;      Totals:         0       0       0       0       0
  1497 ;;Total ram usage:        0 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 1
  1500 ;; This function calls:
  1501 ;;		i1___awdiv
  1502 ;; This function is called by:
  1503 ;;		_adc_function
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function i1_valores
  1509  01EC                     i1_valores:
  1510  01EC                     i1l1042:	
  1511                           ;incstack = 0
  1512                           ; Regs used in i1_valores: [wreg+status,2+status,0+pclath+cstack]
  1513                           
  1514                           
  1515                           ;adc_lib.c: 48:     nib1 = var2%0x10;
  1516  01EC  300F               	movlw	15
  1517  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1518  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1519  01EF  0543               	andwf	_var2,w
  1520  01F0  00BF               	movwf	_nib1
  1521  01F1  3000               	movlw	0
  1522  01F2  0544               	andwf	_var2+1,w
  1523  01F3  00C0               	movwf	_nib1+1
  1524  01F4                     i1l1044:
  1525                           
  1526                           ;adc_lib.c: 49:     nib2 = var2/0x10;
  1527  01F4  3010               	movlw	16
  1528  01F5  00F0               	movwf	i1___awdiv@divisor
  1529  01F6  3000               	movlw	0
  1530  01F7  00F1               	movwf	i1___awdiv@divisor+1
  1531  01F8  0844               	movf	_var2+1,w
  1532  01F9  00F3               	movwf	i1___awdiv@dividend+1
  1533  01FA  0843               	movf	_var2,w
  1534  01FB  00F2               	movwf	i1___awdiv@dividend
  1535  01FC  120A  118A  2096  120A  118A  	fcall	i1___awdiv
  1536  0201  0871               	movf	?i1___awdiv+1,w
  1537  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0203  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0204  00BE               	movwf	_nib2+1
  1540  0205  0870               	movf	?i1___awdiv,w
  1541  0206  00BD               	movwf	_nib2
  1542  0207                     i1l140:
  1543  0207  0008               	return
  1544  0208                     __end_ofi1_valores:
  1545                           
  1546                           	psect	text8
  1547  0096                     __ptext8:	
  1548 ;; *************** function i1___awdiv *****************
  1549 ;; Defined at:
  1550 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  divisor         2    0[COMMON] int 
  1553 ;;  dividend        2    2[COMMON] int 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  quotient        2    7[COMMON] int 
  1556 ;;  sign            1    6[COMMON] unsigned char 
  1557 ;;  counter         1    5[COMMON] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2    0[COMMON] int 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         4       0       0       0       0
  1568 ;;      Locals:         4       0       0       0       0
  1569 ;;      Temps:          1       0       0       0       0
  1570 ;;      Totals:         9       0       0       0       0
  1571 ;;Total ram usage:        9 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		i1_valores
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function i1___awdiv
  1582  0096                     i1___awdiv:
  1583  0096                     i1l954:	
  1584                           ;incstack = 0
  1585                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  1586                           
  1587  0096  01F6               	clrf	i1___awdiv@sign
  1588  0097                     i1l956:
  1589  0097  1FF1               	btfss	i1___awdiv@divisor+1,7
  1590  0098  289A               	goto	u32_21
  1591  0099  289B               	goto	u32_20
  1592  009A                     u32_21:
  1593  009A  28A2               	goto	i1l962
  1594  009B                     u32_20:
  1595  009B                     i1l958:
  1596  009B  09F0               	comf	i1___awdiv@divisor,f
  1597  009C  09F1               	comf	i1___awdiv@divisor+1,f
  1598  009D  0AF0               	incf	i1___awdiv@divisor,f
  1599  009E  1903               	skipnz
  1600  009F  0AF1               	incf	i1___awdiv@divisor+1,f
  1601  00A0                     i1l960:
  1602  00A0  01F6               	clrf	i1___awdiv@sign
  1603  00A1  0AF6               	incf	i1___awdiv@sign,f
  1604  00A2                     i1l962:
  1605  00A2  1FF3               	btfss	i1___awdiv@dividend+1,7
  1606  00A3  28A5               	goto	u33_21
  1607  00A4  28A6               	goto	u33_20
  1608  00A5                     u33_21:
  1609  00A5  28AF               	goto	i1l968
  1610  00A6                     u33_20:
  1611  00A6                     i1l964:
  1612  00A6  09F2               	comf	i1___awdiv@dividend,f
  1613  00A7  09F3               	comf	i1___awdiv@dividend+1,f
  1614  00A8  0AF2               	incf	i1___awdiv@dividend,f
  1615  00A9  1903               	skipnz
  1616  00AA  0AF3               	incf	i1___awdiv@dividend+1,f
  1617  00AB                     i1l966:
  1618  00AB  3001               	movlw	1
  1619  00AC  00F4               	movwf	??i1___awdiv
  1620  00AD  0874               	movf	??i1___awdiv,w
  1621  00AE  06F6               	xorwf	i1___awdiv@sign,f
  1622  00AF                     i1l968:
  1623  00AF  01F7               	clrf	i1___awdiv@quotient
  1624  00B0  01F8               	clrf	i1___awdiv@quotient+1
  1625  00B1                     i1l970:
  1626  00B1  0870               	movf	i1___awdiv@divisor,w
  1627  00B2  0471               	iorwf	i1___awdiv@divisor+1,w
  1628  00B3  1903               	btfsc	3,2
  1629  00B4  28B6               	goto	u34_21
  1630  00B5  28B7               	goto	u34_20
  1631  00B6                     u34_21:
  1632  00B6  28EE               	goto	i1l990
  1633  00B7                     u34_20:
  1634  00B7                     i1l972:
  1635  00B7  01F5               	clrf	i1___awdiv@counter
  1636  00B8  0AF5               	incf	i1___awdiv@counter,f
  1637  00B9  28C5               	goto	i1l978
  1638  00BA                     i1l974:
  1639  00BA  3001               	movlw	1
  1640  00BB                     u35_25:
  1641  00BB  1003               	clrc
  1642  00BC  0DF0               	rlf	i1___awdiv@divisor,f
  1643  00BD  0DF1               	rlf	i1___awdiv@divisor+1,f
  1644  00BE  3EFF               	addlw	-1
  1645  00BF  1D03               	skipz
  1646  00C0  28BB               	goto	u35_25
  1647  00C1                     i1l976:
  1648  00C1  3001               	movlw	1
  1649  00C2  00F4               	movwf	??i1___awdiv
  1650  00C3  0874               	movf	??i1___awdiv,w
  1651  00C4  07F5               	addwf	i1___awdiv@counter,f
  1652  00C5                     i1l978:
  1653  00C5  1FF1               	btfss	i1___awdiv@divisor+1,7
  1654  00C6  28C8               	goto	u36_21
  1655  00C7  28C9               	goto	u36_20
  1656  00C8                     u36_21:
  1657  00C8  28BA               	goto	i1l974
  1658  00C9                     u36_20:
  1659  00C9                     i1l980:
  1660  00C9  3001               	movlw	1
  1661  00CA                     u37_25:
  1662  00CA  1003               	clrc
  1663  00CB  0DF7               	rlf	i1___awdiv@quotient,f
  1664  00CC  0DF8               	rlf	i1___awdiv@quotient+1,f
  1665  00CD  3EFF               	addlw	-1
  1666  00CE  1D03               	skipz
  1667  00CF  28CA               	goto	u37_25
  1668  00D0  0871               	movf	i1___awdiv@divisor+1,w
  1669  00D1  0273               	subwf	i1___awdiv@dividend+1,w
  1670  00D2  1D03               	skipz
  1671  00D3  28D6               	goto	u38_25
  1672  00D4  0870               	movf	i1___awdiv@divisor,w
  1673  00D5  0272               	subwf	i1___awdiv@dividend,w
  1674  00D6                     u38_25:
  1675  00D6  1C03               	skipc
  1676  00D7  28D9               	goto	u38_21
  1677  00D8  28DA               	goto	u38_20
  1678  00D9                     u38_21:
  1679  00D9  28E1               	goto	i1l986
  1680  00DA                     u38_20:
  1681  00DA                     i1l982:
  1682  00DA  0870               	movf	i1___awdiv@divisor,w
  1683  00DB  02F2               	subwf	i1___awdiv@dividend,f
  1684  00DC  0871               	movf	i1___awdiv@divisor+1,w
  1685  00DD  1C03               	skipc
  1686  00DE  03F3               	decf	i1___awdiv@dividend+1,f
  1687  00DF  02F3               	subwf	i1___awdiv@dividend+1,f
  1688  00E0                     i1l984:
  1689  00E0  1477               	bsf	i1___awdiv@quotient,0
  1690  00E1                     i1l986:
  1691  00E1  3001               	movlw	1
  1692  00E2                     u39_25:
  1693  00E2  1003               	clrc
  1694  00E3  0CF1               	rrf	i1___awdiv@divisor+1,f
  1695  00E4  0CF0               	rrf	i1___awdiv@divisor,f
  1696  00E5  3EFF               	addlw	-1
  1697  00E6  1D03               	skipz
  1698  00E7  28E2               	goto	u39_25
  1699  00E8                     i1l988:
  1700  00E8  3001               	movlw	1
  1701  00E9  02F5               	subwf	i1___awdiv@counter,f
  1702  00EA  1D03               	btfss	3,2
  1703  00EB  28ED               	goto	u40_21
  1704  00EC  28EE               	goto	u40_20
  1705  00ED                     u40_21:
  1706  00ED  28C9               	goto	i1l980
  1707  00EE                     u40_20:
  1708  00EE                     i1l990:
  1709  00EE  0876               	movf	i1___awdiv@sign,w
  1710  00EF  1903               	btfsc	3,2
  1711  00F0  28F2               	goto	u41_21
  1712  00F1  28F3               	goto	u41_20
  1713  00F2                     u41_21:
  1714  00F2  28F8               	goto	i1l994
  1715  00F3                     u41_20:
  1716  00F3                     i1l992:
  1717  00F3  09F7               	comf	i1___awdiv@quotient,f
  1718  00F4  09F8               	comf	i1___awdiv@quotient+1,f
  1719  00F5  0AF7               	incf	i1___awdiv@quotient,f
  1720  00F6  1903               	skipnz
  1721  00F7  0AF8               	incf	i1___awdiv@quotient+1,f
  1722  00F8                     i1l994:
  1723  00F8  0878               	movf	i1___awdiv@quotient+1,w
  1724  00F9  00F1               	movwf	?i1___awdiv+1
  1725  00FA  0877               	movf	i1___awdiv@quotient,w
  1726  00FB  00F0               	movwf	?i1___awdiv
  1727  00FC                     i1l379:
  1728  00FC  0008               	return
  1729  00FD                     __end_ofi1___awdiv:
  1730  007E                     btemp	set	126	;btemp
  1731  007E                     wtemp0	set	126
  1732                           
  1733                           	psect	config
  1734                           
  1735                           ;Config register CONFIG1 @ 0x2007
  1736                           ;	Oscillator Selection bits
  1737                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1738                           ;	Watchdog Timer Enable bit
  1739                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1740                           ;	Power-up Timer Enable bit
  1741                           ;	PWRTE = OFF, PWRT disabled
  1742                           ;	RE3/MCLR pin function select bit
  1743                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  1744                           ;	Code Protection bit
  1745                           ;	CP = OFF, Program memory code protection is disabled
  1746                           ;	Data Code Protection bit
  1747                           ;	CPD = OFF, Data memory code protection is disabled
  1748                           ;	Brown Out Reset Selection bits
  1749                           ;	BOREN = OFF, BOR disabled
  1750                           ;	Internal External Switchover bit
  1751                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1752                           ;	Fail-Safe Clock Monitor Enabled bit
  1753                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1754                           ;	Low Voltage Programming Enable bit
  1755                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1756                           ;	In-Circuit Debugger Mode bit
  1757                           ;	DEBUG = 0x1, unprogrammed default
  1758  2007                     	org	8199
  1759  2007  20F4               	dw	8436
  1760                           
  1761                           ;Config register CONFIG2 @ 0x2008
  1762                           ;	Brown-out Reset Selection bit
  1763                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1764                           ;	Flash Program Memory Self Write Enable bits
  1765                           ;	WRT = OFF, Write protection off
  1766  2008                     	org	8200
  1767  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_adc_function
    i1_valores->i1___awdiv

Critical Paths under _main in BANK0

    _valores->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     452
                                              9 BANK0      2     2      0
                          _adc_setup
                              _setup
                            _valores
 ---------------------------------------------------------------------------------
 (1) _valores                                              0     0      0     452
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_setup                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0     352
                                             11 COMMON     3     3      0
                       _adc_function
 ---------------------------------------------------------------------------------
 (4) _adc_function                                         2     2      0     352
                                              9 COMMON     2     2      0
                          i1_valores
 ---------------------------------------------------------------------------------
 (5) i1_valores                                            0     0      0     352
                          i1___awdiv
 ---------------------------------------------------------------------------------
 (6) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_setup
   _setup
   _valores
     ___awdiv

 _isr (ROOT)
   _adc_function
     i1_valores
       i1___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      25       5       46.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jan 31 11:52:04 2022

                      pc 0002                       l81 010D                       l85 0120  
                     l96 01CF                       l89 0158             ___awdiv@sign 0036  
                     fsr 0004                      l140 01EB                      l129 021F  
                    l379 0095                      l998 002D                      _RB0 0030  
                    _RB1 0031                      u500 0087                      u420 0034  
                    u501 0086                      u421 0033                      u510 008C  
                    u430 003F                      u511 008B                      u431 003E  
                    u440 0050                      u600 0124                      u441 004F  
                    u601 0123                      u610 0138                      u611 0137  
                    u460 0062                      u620 0154                      u461 0061  
                    u621 0153                      u455 0054                      u480 0073  
                    u481 0072                      u625 0150                      u570 010D  
                    u475 0063                      u571 010C                      u580 0111  
                    u485 006F                      u637 0140                      u581 0110  
                    u590 0120                      u647 021C                      u495 007B  
                    u591 011F                      _isr 0220                      _var 003B  
                    fsr0 0004                      indf 0000                     l1000 0030  
                   l1010 0044                     l1002 0034                     l1100 01B8  
                   l1020 005A                     l1012 0048                     l1004 0039  
                   l1110 01C2                     l1102 01BE                     l1030 007A  
                   l1022 005E                     l1014 004A                     l1006 003B  
                   l1120 01CA                     l1112 01C3                     l1104 01BF  
                   l1032 0081                     l1024 0062                     l1016 0050  
                   l1008 003F                     l1122 01CB                     l1114 01C4  
                   l1106 01C0                     l1026 0073                     l1018 0053  
                   l1034 0087                     l1124 01CC                     l1116 01C5  
                   l1108 01C1                     l1036 008C                     l1028 0079  
                   l1132 01D0                     l1126 01CD                     l1118 01C6  
                   l1038 0091                     l1134 01D8                     l1150 0111  
                   l1080 0218                     l1128 01CE                     l1160 0126  
                   l1152 0115                     l1144 00FD                     l1074 0208  
                   l1090 01AF                     l1082 01A4                     l1170 0143  
                   l1162 012D                     l1154 011C                     l1146 0107  
                   l1076 020D                     l1092 01B0                     l1084 01AB  
                   l1172 0146                     l1164 0132                     l1078 0217  
                   l1094 01B3                     l1086 01AD                     l1174 0154  
                   l1166 0138                     l1158 0124                     l1096 01B6  
                   l1088 01AE                     l1168 013C                     l1098 01B7  
                   ?_isr 0070                     i1l74 022E                     _TMR0 0001  
                   _WPUB 0095                     _nib1 003F                     _nib2 003D  
                   _main 00FD    __size_of_adc_function 0045                     _var2 0043  
                   btemp 007E                     start 000E                    ??_isr 007B  
                  ?_main 0070           i1___awdiv@sign 0076          __end_of___awdiv 0096  
                  _ANSEL 0188          ___awdiv@divisor 0030                    i1l140 0207  
                  i1l137 01A3                    i1l379 00FC                    i1l960 00A0  
                  i1l970 00B1                    i1l962 00A2                    i1l954 0096  
                  i1l980 00C9                    i1l972 00B7                    i1l964 00A6  
                  i1l956 0097                    i1l982 00DA                    i1l974 00BA  
                  i1l990 00EE                    i1l966 00AB                    i1l958 009B  
                  i1l992 00F3                    i1l984 00E0                    i1l976 00C1  
                  i1l968 00AF                    i1l994 00F8                    i1l986 00E1  
                  i1l978 00C5                    i1l988 00E8          ___awdiv@counter 0035  
                  u40_20 00EE                    u32_20 009B                    u40_21 00ED  
                  u32_21 009A                    u41_20 00F3                    u33_20 00A6  
                  u41_21 00F2                    u33_21 00A5                    u34_20 00B7  
                  u34_21 00B6                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    u35_25 00BB  
                  _PORTE 0009                    u36_20 00C9                    u52_20 0165  
                  u36_21 00C8                    u52_21 0164                    u53_20 016E  
                  u53_21 016D                    u37_25 00CA                    u38_20 00DA  
                  u54_20 0186                    u38_21 00D9                    u54_21 0185  
                  u38_25 00D6                    u55_20 0199                    u55_21 0198  
                  u39_25 00E2                    u56_20 0224                    u56_21 0223  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089             _adc_function 015F  
                  _tabla 0020                    _setup 01A4                    pclath 000A  
        __end_of_valores 01EC                    status 0003                    wtemp0 007E  
     __size_ofi1___awdiv 0067          __initialization 0011             __end_of_main 015F  
     __size_ofi1_valores 001C                   ??_main 0039                   _ADRESH 001E  
       ___awdiv@dividend 0032                   ?_setup 0070                   _ANSELH 0189  
                 i1l1042 01EC                   i1l1050 016E                   i1l1044 01F4  
                 i1l1060 0186                   i1l1052 0177                   i1l1140 0229  
                 i1l1070 019B                   i1l1062 0188                   i1l1054 0178  
                 i1l1046 015F                   i1l1142 022D                   i1l1072 01A1  
                 i1l1064 018E                   i1l1056 017D                   i1l1048 0165  
                 i1l1136 0220                   i1l1066 0193                   i1l1058 0180  
                 i1l1138 0224                   i1l1068 0199                ??___awdiv 0034  
       ___awdiv@quotient 0037        __end_ofi1___awdiv 00FD                   saved_w 007E  
              ??_valores 0039  __end_of__initialization 0029        __end_ofi1_valores 0208  
     __size_of_adc_setup 0018           __pcstackCOMMON 0070             __pidataBANK0 024A  
          __end_of_setup 01D0           _OPTION_REGbits 0081                  ??_setup 0030  
             __pbssBANK0 003B               __pmaintext 00FD               __pintentry 0004  
     i1___awdiv@dividend 0072        __end_of_adc_setup 0220       i1___awdiv@quotient 0077  
                ___awdiv 002D                  __ptext1 01D0                  __ptext2 002D  
                __ptext3 01A4                  __ptext4 0208                  __ptext5 0220  
                __ptext6 015F                  __ptext7 01EC                  __ptext8 0096  
           __size_of_isr 0017                  _valores 01D0     end_of_initialization 0029  
              _PORTBbits 0006                _PORTEbits 0009                i1___awdiv 0096  
              i1_valores 01EC      start_initialization 0011              __end_of_isr 0237  
             ?i1___awdiv 0070               ?i1_valores 0070               init_fetch0 0237  
            __pdataBANK0 0020                ___latbits 0002            __pcstackBANK0 0030  
          ?_adc_function 0070                _adc_setup 0208                 ?___awdiv 0030  
      i1___awdiv@divisor 0070        i1___awdiv@counter 0075           ??_adc_function 0079  
               ?_valores 0070              ??i1___awdiv 0074               ?_adc_setup 0070  
         __size_of_setup 002C        interrupt_function 0004              ??i1_valores 0079  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069                 _banderas 0041              ??_adc_setup 0030  
       __size_of_valores 001C            __size_of_main 0062     __end_of_adc_function 01A4  
             _INTCONbits 000B                 init_ram0 023B                 intlevel1 0000  
             _OSCCONbits 008F  
